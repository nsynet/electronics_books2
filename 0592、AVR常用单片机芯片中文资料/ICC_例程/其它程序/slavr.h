/***********************************************/	
void write_lcd(unsigned char data,unsigned char data_type);
/************************************************
         从LCD读取数据或地址                                            
 	     data_type:数据类型
		 1表示数据，0表示指令		 
************************************************/		
unsigned char read_lcd(unsigned char data_type);
/*****************************************************
                LCD初始化函数
******************************************************/	
void lcd_init(void);
/*********************************
          单字符输出函数
*********************************/
void lcd_putc(unsigned char c) ;
/*********************************
         字符串输出函数
*********************************/
void lcd_puts(unsigned char *s);
/*********************************
         清除LCD显示函数
*********************************/
void lcd_clear(void);
/*****************************************************
       写数据到指定DDRAM/CGRAM位置
	   
*****************************************************/
void lcd_write(unsigned char adder,unsigned char data);
/*****************************************************
             写数据到DDRAM当前位置
	   
*****************************************************/
void lcd_write_data(unsigned char data);
/*****************************************************
       从指定DDRAM/CGRAM位置读取数据
	   
*****************************************************/
unsigned char lcd_read(unsigned char adder);
/*****************************************************
      将光标转移到DDRAM指定位置处
	      x:0~39,y:0~1
*****************************************************/
void lcd_gotoxy(unsigned char x,unsigned char y);
/************************************************
            LCD字符移位函数
	n:移动的次数 
	p:移动方向,'l'或'L'表示左移，'r'或'R'表示右移		
*************************************************/
void lcd_shift(unsigned char n,unsigned char p);
/****************************************************
      延时函数(mS),对应晶振频率为8MHZ  
*****************************************************/
void delay_1ms(void);
void delay_ms(unsigned int n);
/****************************************************
      键盘扫描函数,注意本函数不作按键释放检查					 
	  返回值：1、没有键按下返回0x7f
              2、如果shift按下，返回值最高位为1
              3、其余键按下时，返回键名对应数值
	  
****************************************************/
unsigned char scan_key(void);
/****************************************************
      键盘扫描函数,注意本函数作按键释放检查					 
	  返回值：1、没有键按下返回0x7f
              2、如果shift按下，返回值最高位为1
              3、其余键按下时，返回键名对应数值
	  
****************************************************/
unsigned char keypad(void);
/**************************************
            I2C启动
**************************************/
void Start(void);
/*************************************
            I2C停止
**************************************/
void Stop(void);
/**************************************
            发送应答信号
**************************************/
void Ack(void);
/*************************************
             不发送答信号
**************************************/
void NoAck(void);
/**************************************
            测试应签信号         
**************************************/
unsigned char TestAck(void);
/***************************************
             I2C写数据
***************************************/
void Write8Bit(unsigned char input);
/****************************************
              写24C02            
*****************************************/
void Write24c02(unsigned char *Wdata,unsigned char RomAddress,unsigned char number);
/*****************************************
             读取I2C数据
*****************************************/
unsigned char Read8Bit(void);
/***************************************
              读24C02
***************************************/
void Read24c02(unsigned char *RamAddress,unsigned char RomAddress,unsigned char bytes);
/***************************************
            微秒延时程序
***************************************/
void delay_us(int time);
/*********************************************
          检查DS1820是否存在：
	如果DS1820不存在返回1，否则返回0
*********************************************/
unsigned char ds1820_ack(void);
/*********************************************
           写ROM或存贮器命令到DS1820
*********************************************/
void ds1820_write(unsigned char cmd);
/*********************************************
          从DS1820读1字节数据
*********************************************/ 
unsigned char ds1820_read(void);
/*********************************************
                CRC校验
*********************************************/
unsigned char crccheck(unsigned char *p,unsigned char len);
